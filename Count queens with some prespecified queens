//Count queens with some specified queens
/*Count number of solutions to place n queens on a chess board n x n (rows and columns are indexed 1, 2, 3, ..., n) such that no two queens attach each other.
Input
Line 1: a positive integer n (1 <= n <= 20)
Line 2: a positive integer K (1 <= K <= 20)
Line k+2 (k=1, 2, ..., K): contains two integers r and c in which there is a queen in column c and row r.
Output
Write number of solutions found. */
#include <stdio.h>
#define N 100
int x[N];
int n;
int K;
int a[N]; //storing pre-placed queens
int count = 0;
void input()
{
    scanf("%d", &n);
    scanf("%d", &K);
    for (int i = 0; i <= n; i++) a[i] = 0;
    for (int k = 0; k <= K; k++)
    {
        int r, c;
        scanf("%d %d", &r,&c);
        a[c] = r;
    }
}
int check(int v, int k)
{
    for (int i = 1; i <= k-1; i++)
    {
        if (x[i] == v) return 0;
        if (x[i] + i == v+k) return 0;
        if (x[i] -i == v-k) return 0;
    }
    return 1;
}
void solution()
{
    count++;
    return;
}
void Try(int k)
{
    for (int v = (a[k]>0? a[k]:1); v<=(a[k]>0? a[k]:n); v++)
    {
        if (check(v,k))
        {
            x[k] = v;
            if (k == n) solution();
            else Try(k+1);
        }
    }
}
int main(void)
{
    input();
    Try(1);
    printf("%d\n", count);
    return 0;
}
