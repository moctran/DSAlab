//sudoku check
#include <stdio.h>
#include <string.h>

#define N 100000
int input[9][9];
int result[N];
int T;
int markrow[9][10];
int markcol[9][10];
int marksquare[3][3][10];

int range(int a[9][9])
{
    for (int i = 0; i < 9; i++)
    {
        for (int j = 0; j < 9; j++)
        {
            if (a[i][j] < 0 || a[i][j] > 9) return 0;
        }
    }
    return 1;
}
int checkSudoku(int a[9][9])
{
    if (range(a) == 0) return 0;
    int unique[10];
    for (int i = 0; i < 9; i++)
    {
        memset(unique, 0, sizeof(unique));
        for (int j = 0; j < 9; j++)
        {
            int Z = a[i][j];
            if (unique[Z]) return 0;
            unique[Z] = 1;
        }
    }
    for (int i = 0; i < 9; i++)
    {
        memset(unique, 0, sizeof(unique));
        for (int j = 0; j < 9; j++)
        {
            int Z = a[j][i];
            if (unique[Z]) return 0;
            unique[Z] = 1;
        }
    }
    for (int i = 0; i < 7; i+=3)
    {
        for (int j = 0; j < 7; j+=3)
        {
            memset(unique, 0, sizeof(unique));
            for (int k = 0; k < 3; k++)
            {
                for (int l = 0; l < 3; l++)
                {
                    int X = i+k;
                    int Y = j+l;
                    int Z = a[X][Y];
                    if (unique[Z]) return 0;
                    unique[Z] = 1;
                }
            }
        }
    }
    return 1;
}
void read()
{
    scanf("%d", &T);
    for (int j = 1; j <= T; j++)
    {
        for (int i = 0; i < 9; i++)
        {
            for (int j = 0; j < 9; j++)
                scanf("%d", &input[i][j]);
        }
        result[j] = checkSudoku(input);
    }
}

int main(void)
{
    read();
    for (int i = 1; i <=T; i++) printf("%d\n", result[i]);
    return 0;
}
